{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAO,SAAS,aAAa,CAAC,MAC9B,EAAQ,SAAS,gBAAgB,CAAC,MAa9B,EAQG,GARO,GAAG,CAAC,SAAA,CAAtB,EAA+B,MAAA,CAC7B,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,CAC3B,IAAK,CAAC,EAAK,OAAO,CAAC,GAAG,AACxB,C,GAKF,IAAM,EApBI,EAoBe,GApBL,IAAI,CAAC,SAAC,CAAA,CAAG,CAA3B,EACE,IAAM,EAAS,WAAW,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,UAAW,KAG9D,OAAO,AAFQ,WAAW,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,UAAW,KAE9C,CAClB,EAiBF,CAAA,EAAK,SAAS,CAAI,iBAUF,MAAA,CARV,EAAQ,GAAG,CAAC,SAAA,CAFlB,EAE0B,MAAC,sCAGL,MAAA,CADE,EAAK,OAAO,CAAC,QAAQ,CAAC,0BAE3B,MAAA,CADG,EAAK,OAAO,CAAC,MAAM,CAAC,uBAGhC,MAAA,CAFS,EAAK,OAAO,CAAC,GAAG,CAAC,uBAET,MAAA,CAAjB,EAAK,WAAW,CAAC,sBAEpB,GAAA,IAAI,CAAC,IAAI,c,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar list = document.querySelector(\"ul\");\nvar items = document.querySelectorAll(\"li\");\nfunction sortList(array) {\n    return _to_consumable_array(array).sort(function(a, b) {\n        var valueA = parseFloat(a.dataset.salary.replace(/[^\\d.]/g, \"\"));\n        var valueB = parseFloat(b.dataset.salary.replace(/[^\\d.]/g, \"\"));\n        return valueB - valueA;\n    });\n}\nfunction getEmployees(array) {\n    return _to_consumable_array(array).map(function(item) {\n        return {\n            name: item.textContent.trim(),\n            position: item.dataset.position,\n            salary: item.dataset.salary,\n            age: +item.dataset.age\n        };\n    });\n}\ngetEmployees(items);\nvar newList = sortList(items);\nlist.innerHTML = \"\\n  <ul>\\n    \".concat(newList.map(function(item) {\n    return \"\\n      <li\\n        data-position=\".concat(item.dataset.position, \"\\n        data-salary=\").concat(item.dataset.salary, \"\\n        data-age=\").concat(item.dataset.age, \"\\n      >\\n        \").concat(item.textContent, \"\\n      </li>\\n    \");\n}).join(\"\"), \"\\n  </ul>\\n\");\n\n//# sourceMappingURL=index.69df4c68.js.map\n","'use strict';\n\nconst list = document.querySelector('ul');\nconst items = document.querySelectorAll('li');\n\nfunction sortList(array) {\n  return [...array].sort((a, b) => {\n    const valueA = parseFloat(a.dataset.salary.replace(/[^\\d.]/g, ''));\n    const valueB = parseFloat(b.dataset.salary.replace(/[^\\d.]/g, ''));\n\n    return valueB - valueA;\n  },\n  );\n}\n\nfunction getEmployees(array) {\n  return [...array].map(item => ({\n    name: item.textContent.trim(),\n    position: item.dataset.position,\n    salary: item.dataset.salary,\n    age: +item.dataset.age,\n  }));\n}\n\ngetEmployees(items);\n\nconst newList = sortList(items);\n\nlist.innerHTML = `\n  <ul>\n    ${newList.map(item => `\n      <li\n        data-position=${item.dataset.position}\n        data-salary=${item.dataset.salary}\n        data-age=${item.dataset.age}\n      >\n        ${item.textContent}\n      </li>\n    `).join('')}\n  </ul>\n`;\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","list","document","querySelector","items","querySelectorAll","map","item","textContent","trim","position","dataset","salary","age","newList","sort","a","b","valueA","parseFloat","replace","valueB","innerHTML","concat","join"],"version":3,"file":"index.69df4c68.js.map"}